

RESOURCE

TASK TaskMain (PRIORITY := 8);
  PRG_Start_MultiMotion();
  MC_FieldbusHandlerIN( Enable := TRUE );
  MC_MoviPlcHandlerIN( Enable := TRUE );
  PRG_UserMapping_IN();
  PRG_FieldbusMappingIN_TechModule_effiSRS(Enable:= TRUE );
     PRG_TaskMain_Framework();
     AxisGroupControl_effiSRS(Enable:= TRUE );   
     AxisHandler_BasicMotion();	
     AxisHandler_Main_MultiMotion();
     CamSwitchHandler_Main();
     MC_MsgHandler();	
  PRG_FieldbusMappingOUT_TechModule_effiSRS(Enable:= TRUE );
  PRG_UserMapping_OUT();
  MC_MoviPlcHandlerOUT( Enable := TRUE );
  MC_FieldbusHandlerOUT( Enable := TRUE );
{Additional_info : 2,1,10000,0,1,4294967295}
END_TASK

TASK TaskPriority (PRIORITY := 2, INTERVAL := T#10ms);
 
  PRG_TaskPriority_Framework();
  AxisHandler_Priority_MultiMotion();
  AxisControl_Priority_effiSRS(Enable:=TRUE , AppeffiSRS:=AxisGroupeffiSRS );
  TraceHandler();
  
{Additional_info : 1,0,0,0,1,4294967295}
END_TASK

TASK TaskPriority_CamSwitch (PRIORITY := 1, INTERVAL := T#1ms);
  CamSwitchHandler_Priority();
  PRG_TaskPriority_Framework_CamSwitch();
{Additional_info : 1,0,0,0,1,4294967295}
END_TASK
{event_task : 'start','Called when program starts','','(* ATTENTION: The name of the systemevent must start with $'callback$' e.g. $'callbackSystemEventStart$'! *)$R$NFUNCTION systemevent : DWORD$R$NVAR_INPUT$R$N$TdwEvent: DWORD;$R$N$TdwFilter: DWORD;$R$N$TdwOwner: DWORD;$R$NEND_VAR$R$NVAR$R$N$T(* WARNING: Do not modify this interface. You are not allowed to use local variables here! *)$R$NEND_VAR$R$N'}{event_task_info : 0,1,24341}
{event_task : 'stop','Called when program stops','','(* ATTENTION: The name of the systemevent must start with $'callback$' e.g. $'callbackSystemEventStop$'! *)$R$NFUNCTION systemevent : DWORD$R$NVAR_INPUT$R$N$TdwEvent: DWORD;$R$N$TdwFilter: DWORD;$R$N$TdwOwner: DWORD;$R$NEND_VAR$R$NVAR$R$N$T(* WARNING: Do not modify this interface. You are not allowed to use local variables here! *)$R$NEND_VAR$R$N'}{event_task_info : 0,2,24341}
{event_task : 'before_reset','Called before reset takes place','','(* ATTENTION: The name of the systemevent must start with $'callback$' e.g. $'callbackSystemEventBeforeReset$'! *)$R$NFUNCTION systemevent : DWORD$R$NVAR_INPUT$R$N$TdwEvent: DWORD;$R$N$TdwFilter: DWORD;$R$N$TdwOwner: DWORD;$R$NEND_VAR$R$NVAR$R$N$T(* WARNING: Do not modify this interface. You are not allowed to use local variables here! *)$R$NEND_VAR$R$N'}{event_task_info : 0,3,24341}
{event_task : 'after_reset','Called after reset took place','','(* ATTENTION: The name of the systemevent must start with $'callback$' e.g. $'callbackSystemEventAfterReset$'! *)$R$NFUNCTION systemevent : DWORD$R$NVAR_INPUT$R$N$TdwEvent: DWORD;$R$N$TdwFilter: DWORD;$R$N$TdwOwner: DWORD;$R$NEND_VAR$R$NVAR$R$N$T(* WARNING: Do not modify this interface. You are not allowed to use local variables here! *)$R$NEND_VAR$R$N'}{event_task_info : 0,4,24341}
{event_task : 'shutdown','Called before shutdown is performed','','(* ATTENTION: The name of the systemevent must start with $'callback$' e.g. $'callbackSystemEventShutdown$'! *)$R$NFUNCTION systemevent : DWORD$R$NVAR_INPUT$R$N$TdwEvent: DWORD;$R$N$TdwFilter: DWORD;$R$N$TdwOwner: DWORD;$R$NEND_VAR$R$NVAR$R$N$T(* WARNING: Do not modify this interface. You are not allowed to use local variables here! *)$R$NEND_VAR$R$N'}{event_task_info : 0,5,24341}
{event_task : 'excpt_cycletime_overflow','Called when a cycletime overflow happened','','(* ATTENTION: The name of the systemevent must start with $'callback$' e.g. $'callbackSystemEventExcptCycletimeOverflow$'! *)$R$NFUNCTION systemevent : DWORD$R$NVAR_INPUT$R$N$TdwEvent: DWORD;$R$N$TdwFilter: DWORD;$R$N$TdwOwner: DWORD;$R$NEND_VAR$R$NVAR$R$N$T(* WARNING: Do not modify this interface. You are not allowed to use local variables here! *)$R$NEND_VAR$R$N'}{event_task_info : 0,6,24341}
{event_task : 'excpt_watchdog','Software watchdog of IEC-task expired','','(* ATTENTION: The name of the systemevent must start with $'callback$' e.g. $'callbackSystemEventExcptWatchdog$'! *)$R$NFUNCTION systemevent : DWORD$R$NVAR_INPUT$R$N$TdwEvent: DWORD;$R$N$TdwFilter: DWORD;$R$N$TdwOwner: DWORD;$R$NEND_VAR$R$NVAR$R$N$T(* WARNING: Do not modify this interface. You are not allowed to use local variables here! *)$R$NEND_VAR$R$N'}{event_task_info : 0,7,24341}

END_RESOURCE
